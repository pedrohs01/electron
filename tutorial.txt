[15:57] JOAO VITOR ANDRADE DE MIRANDA
Tutorial Electron
 
1) Iniciar um novo projeto Node

    npm init
 
(seguir a documentação)
 
2) Criar uma estrutura de pastas (modelo de camadas MVC)

src

|---- views 

        |--- index.html

|---- public

        |--- css

        |--- img

        |--- js
 
3) Personalização da janela 

    - dimensões

    - redimensionamento

    - cor

    - ícone

    - menu e barra de título
 
4) Personalização do menu

template -> estrutura de dados

1º Passo: Importar o recurso Menu e criar o template

2º Passo: Exibir o template no lugar do menu original
 
Obs: Alguns recursos precisam ser importação:

    ex: Acesso a links externos

    shell

Obs2: O shell é usado no main para acessar recursos externos (links)
 
5) Processos (principal e renderização)

    - Só pode existir um processo principal (main.js)

    - Para criar um processo de renderização deve-se ligar um

    documento js na página html

    - Pode-se usar um único processo de renderização para todas

    as páginas html, porém é recomendado usar um processo de

    renderização por documento html

    - Por uma questão didática pode-se dizer que o processo de 

    renderização é o front-end da aplicação e o processo principal

    é o back-end da aplicação
 
preload.js (Seguir a documentação para implementar)

    É usado para:

1) Expor a utilização do node e recursos do electron

para o processo de renderização, melhorando o desempenho

e a segurança

2) Para situações onde sabe que irá precisar de certos recursos e dados

antes que o usuário solicite diretamente, tornando a experiência do usuário

mais rápida e suave
 
Obs: É possível tirar o contexto de isolamento e permitir a execução do node.js

no processo de renderização
 
IPC(inter-process communication)

ipcMain (processo principal)

ipcRenderer (processo de renderização)
 
Sintaxe do ipcMain e ipcRenderer (recebimento)

on()

ipcMain.on(()=>{})

ipcRenderer.on(()=>{})
 
                      preload.js

Fluxo: ipcRenderer -> hello() -> main.js (ipcMain)
 
_________________________________________

Uso de frameworks (front-end) no electron

    - bootstrap

        |_____ local (download)

1º Passo: Fazer o download do css e js compilado

2º Passo: Descompactar e copiar o bootstrap.min.css e bootstrap.min.js para a pasta public

3° Passo: Link com o documento HTML

4º Passo: Seguir a documentação do bootstrap:

    Dica: O bootstrap trabalha com classes

5º Passo: Inicie criando um container (div.container)
 
_________________________________________

Relação entre janelas (parent-child) e modal

    - Foco do usuário no sistema

    - Segurança e desempenho
 
1º Passo: Determinar a janela pai (principal)

2º Passo: Criar o relacionamento entre janelas

_________________________________________
 
 IPC - Comunicação segura entre Processos

 ipcMain (main.js)
          || <----------------------- preload.js
 ipcRenderer (renderer.js)

 obs:
 1) main.js (processo principal e unico)
 2) render.js (processo de renderização)
     -pode existir vários Processos de renderização
     - renderer.js (nomne atribuido - você pode escolher qualquer um)
 
 